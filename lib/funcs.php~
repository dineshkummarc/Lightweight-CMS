<?php
/*
TABLE OF CONTENTS
dbg
ErrorPushTitle
ErrorPushBody
ErrorCall
ArrayDisplay
FileRead
ConnectDataBase
Download
readfile_chunked
TemplateReplaceStrings
GetImageDetails
getDirectoryList
GetStyleList
CreateThumbsPage
CreateSlidePage
ParseAddressBar
GetGeneratlInfo
PicToPage
CreateNavigationBar
SlideView
table
PreChecks
DisplayError
IntToChecked
TemplateReplace
ReplaceUserInfo
StingReplaceFile
IsGroupMember
GetUserRights
ToBool
StringLeft
StringRight
StringTrimLeft
StringTrimRight
*/
$error_title = "";
$error_msg = "";

//function NOP() {}

function dbg($var1 = NULL, $var2 = NULL, $var3 = NULL, $var4 = NULL, $var5 = NULL, $var6 = NULL, $var7 = NULL, $var8 = NULL, $var9 = NULL, $var10 = NULL, $var11 = NULL, $var12 = NULL, $var13 = NULL, $var14 = NULL, $var15 = NULL, $var16 = NULL, $var17 = NULL, $var18 = NULL, $var19 = NULL, $var20 = NULL, $var21 = NULL, $var22 = NULL, $var23 = NULL, $var24 = NULL, $var25 = NULL, $var26 = NULL, $var27 = NULL, $var28 = NULL, $var29 = NULL, $var30 = NULL, $var31 = NULL, $var32 = NULL, $var33 = NULL, $var34 = NULL, $var35 = NULL, $var36 = NULL, $var37 = NULL, $var38 = NULL, $var39 = NULL, $var40 = NULL, $var41 = NULL, $var42 = NULL, $var43 = NULL, $var44 = NULL, $var45 = NULL, $var46 = NULL, $var47 = NULL, $var48 = NULL, $var49 = NULL, $var50 = NULL, $var51 = NULL, $var52 = NULL, $var53 = NULL, $var54 = NULL, $var55 = NULL, $var56 = NULL, $var57 = NULL, $var58 = NULL, $var59 = NULL, $var60 = NULL, $var61 = NULL, $var62 = NULL, $var63 = NULL, $var64 = NULL, $var65 = NULL, $var66 = NULL, $var67 = NULL, $var68 = NULL, $var69 = NULL, $var70 = NULL, $var71 = NULL, $var72 = NULL, $var73 = NULL, $var74 = NULL, $var75 = NULL, $var76 = NULL, $var77 = NULL, $var78 = NULL, $var79 = NULL, $var80 = NULL, $var81 = NULL, $var82 = NULL, $var83 = NULL, $var84 = NULL, $var85 = NULL, $var86 = NULL, $var87 = NULL, $var88 = NULL, $var89 = NULL, $var90 = NULL, $var91 = NULL, $var92 = NULL, $var93 = NULL, $var94 = NULL, $var95 = NULL, $var96 = NULL, $var97 = NULL, $var98 = NULL, $var99 = NULL, $var100 = NULL, $var101 = NULL, $var102 = NULL, $var103 = NULL, $var104 = NULL, $var105 = NULL, $var106 = NULL, $var107 = NULL, $var108 = NULL, $var109 = NULL, $var110 = NULL, $var111 = NULL, $var112 = NULL, $var113 = NULL, $var114 = NULL, $var115 = NULL, $var116 = NULL, $var117 = NULL, $var118 = NULL, $var119 = NULL, $var120 = NULL, $var121 = NULL, $var122 = NULL, $var123 = NULL, $var124 = NULL, $var125 = NULL, $var126 = NULL, $var127 = NULL, $var128 = NULL, $var129 = NULL, $var130 = NULL, $var131 = NULL, $var132 = NULL, $var133 = NULL, $var134 = NULL, $var135 = NULL, $var136 = NULL, $var137 = NULL, $var138 = NULL, $var139 = NULL, $var140 = NULL, $var141 = NULL, $var142 = NULL, $var143 = NULL, $var144 = NULL, $var145 = NULL, $var146 = NULL, $var147 = NULL, $var148 = NULL, $var149 = NULL, $var150 = NULL, $var151 = NULL, $var152 = NULL, $var153 = NULL, $var154 = NULL, $var155 = NULL, $var156 = NULL, $var157 = NULL, $var158 = NULL, $var159 = NULL, $var160 = NULL, $var161 = NULL, $var162 = NULL, $var163 = NULL, $var164 = NULL, $var165 = NULL, $var166 = NULL, $var167 = NULL, $var168 = NULL, $var169 = NULL, $var170 = NULL, $var171 = NULL, $var172 = NULL, $var173 = NULL, $var174 = NULL, $var175 = NULL, $var176 = NULL, $var177 = NULL, $var178 = NULL, $var179 = NULL, $var180 = NULL, $var181 = NULL, $var182 = NULL, $var183 = NULL, $var184 = NULL, $var185 = NULL, $var186 = NULL, $var187 = NULL, $var188 = NULL, $var189 = NULL, $var190 = NULL, $var191 = NULL, $var192 = NULL, $var193 = NULL, $var194 = NULL, $var195 = NULL, $var196 = NULL, $var197 = NULL, $var198 = NULL, $var199 = NULL, $var200 = NULL, $var201 = NULL, $var202 = NULL, $var203 = NULL, $var204 = NULL, $var205 = NULL, $var206 = NULL, $var207 = NULL, $var208 = NULL, $var209 = NULL, $var210 = NULL, $var211 = NULL, $var212 = NULL, $var213 = NULL, $var214 = NULL, $var215 = NULL, $var216 = NULL, $var217 = NULL, $var218 = NULL, $var219 = NULL, $var220 = NULL, $var221 = NULL, $var222 = NULL, $var223 = NULL, $var224 = NULL, $var225 = NULL, $var226 = NULL, $var227 = NULL, $var228 = NULL, $var229 = NULL, $var230 = NULL, $var231 = NULL, $var232 = NULL, $var233 = NULL, $var234 = NULL, $var235 = NULL, $var236 = NULL, $var237 = NULL, $var238 = NULL, $var239 = NULL, $var240 = NULL, $var241 = NULL, $var242 = NULL, $var243 = NULL, $var244 = NULL, $var245 = NULL, $var246 = NULL, $var247 = NULL, $var248 = NULL, $var249 = NULL, $var250 = NULL, $var251 = NULL, $var252 = NULL, $var253 = NULL, $var254 = NULL) {
	for($i = 1 ;$i < 255;$i++) {
		eval('$var = $var'.$i.";");
		//echo '$var = $var'.$i."<br>";
		if($var !== NULL) {
			echo GetDebugText($var);
		}
	}
}

function GetDebugText($var) {
	if (is_bool($var)){
		$sStr = "false";
		if ($var){$sStr = "true";}
		return 'DEBUG: BOOL => "'.$sStr.'"<br>';
	}
	if (is_int($var)){
		return 'DEBUG: INT => "'.$var.'"<br>';
	}
	if (is_float($var)){
		return 'DEBUG: FLOAT => "'.$var.'"<br>';
	}
	if (is_object($var)){
		return 'DEBUG: OBJECT => "'.$var.'"<br>';
	}
	if (is_string($var)){
		return 'DEBUG: STR => "'.$var.'"<br>';
	}
	if (is_resource($var)){
		return 'DEBUG: RESOURCE => "'.$var.'"<br>';
	}
	if (is_array($var)){
		return 'DEBUG: ARRAY => "'.ArrayDisplay($var).'"<br>';
	}

}

function ErrorPushTitle($sStr){global $error_title ;$error_title = $sStr;}
function ErrorPushBody($sStr){global $error_msg ;$error_msg .= $sStr."<br>\n";}
function ErrorCall(){global $error_title,$error_msg;DisplayError($error_title,$error_msg);}

function ArrayDisplay($aArray,$LineEnd = "<br>\n") {
	$keys = array_keys($aArray);
	$data = "";
	for($i = 0; $i < count($aArray); $i++) {
		$data .= "[".$keys[$i]."] = '".$aArray[$keys[$i]]."'".$LineEnd;
	}
	return $data;
}

function FileRead($sFile){
	$fd = fopen ($sFile , "r") ;
	if ($fd) {
		if (filesize($sFile) > 0){
			$fstring = fread ($fd , filesize ($sFile)) ;
			fclose($fd);
			return $fstring;
		}else{
			fclose($fd);
			return "";
			}
	}
	else{
		echo '<font color="#FF0000">ERROR:</font> Can not read file '.$sFile;
		return false;
	}
}

function ConnectDataBase()
{
	global $DB_CONNECTED;
	//Make sure that only 1 connection is created
	if($DB_CONNECTED != true) {
		global $DATABASE_SERVER;
		global $DATABASE_PORT;
		global $DATABASE_USER;
		global $DATABASE_NAME;
		global $DATABASE_PASSWORD;
		global $connection;
		//IF port set, use it
		if($DATABASE_PORT != "") {$ver = $DATABASE_SERVER.":".$DATABASE_PORT;}
		$connection = @mysql_connect($DATABASE_SERVER, $DATABASE_USER, $DATABASE_PASSWORD);
		if (!$connection) {errorPushTitle("Database error");ErrorPushBody("Unable to connect to: ".$DATABASE_SERVER);ErrorCall();}
		$sel = @mysql_select_db($DATABASE_NAME);
		if (!$sel) {errorPushTitle("Database error");ErrorPushBody("Unable to select database ".$DATABASE_NAME);ErrorCall();}
		$DB_CONNECTED = true;
		return true;
	}else {return false;}	
}


function Download($sFile) {
	global $Connection;
	$Details = false;
	ConnectDataBase(); // If not connected, connect
	$FileData = mysql_query('SELECT * FROM '.$IMAGES[this] .' WHERE '.$IMAGES["FileName"].' = "'.$sFile.'"');
	if (!mysql_num_rows($result)) {
		mysql_query("INSERT INTO Images VALUES ('".$sFile."','". $sFile ."','". 1 ."','". 0 ."','". 0 ."','".date("Y")."','".date("n")."','".date("t")."','','','','0','','');");
	}else {
		$result = mysql_query("SELECT * FROM ".'Images WHERE '.$IMAGES["FileName"].' = "'.$sFile.'"');
		$Title = mysql_result($FileData, 0, "Title");
		$DownloadCount = mysql_result($FileData, 0, "DownloadCount");
		mysql_query("UPDATE Images SET ".$IMAGES["DownloadCount"]." = '".($DownloadCount +1)."' WHERE ".$IMAGES["FileName"]." = '".$sFile."'");
	}
	mysql_close($connection);

	header("Pragma: public");
	header("Expires: 0");
	header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
	header("Cache-Control: public");
	header("Content-Description: File Transfer");
	header("Content-Type: image/jpeg");
	if (!strstr($Title[0], ".jpg")) {$Title[0] .= ".jpg";}
	header('Content-Disposition: attachment; filename='.$Title[0]);
	header("Content-Transfer-Encoding: binary");
	header("Content-Length: " .filesize($sFile) );
	define('CHUNK_SIZE', 1024*1024); // Size (in bytes) of tiles chunk
	readfile_chunked($sFile);
	exit;
}

function readfile_chunked($filename, $retbytes = TRUE) {
	$buffer = '';
	$cnt =0;
	$handle = fopen($filename, 'rb');
	if ($handle === false) {
		return false;
	}
	while (!feof($handle)) {
		$buffer = fread($handle, CHUNK_SIZE);
		echo $buffer;
		ob_flush();
		flush();
		if ($retbytes) {
			$cnt += strlen($buffer);
		}
	}
	$status = fclose($handle);
	if ($retbytes && $status) {
		return $cnt; // return num. bytes delivered like readfile() does.
	}
	return $status;
}



function TemplateReplaceStrings ($sTemplate){
	global $ImageDetails,$LoginData,$hits,$files,$LastUpdate,$LinksData,$left,$right,$Page,$Pic,$SlideHeight,$SlideWidth,$CommentsData,$SlideData,$RateData;
	$sTemplate = str_replace("{IMAGE_META}", $ImageDetails["MetaKeyWords"], $sTemplate);
	$sTemplate = str_replace("{LOGIN}", $LoginData, $sTemplate);
	$sTemplate = str_replace("{TITLE}", $ImageDetails["Title"], $sTemplate);
	$sTemplate = str_replace("{HITS}", $hits, $sTemplate);
	$sTemplate = str_replace("{FILE_COUNT}", count($files), $sTemplate);
	$sTemplate = str_replace("{LAST_UPDATE}", date("d m Y H:i", $LastUpdate), $sTemplate);
	$sTemplate = str_replace("{LINKS_BAR}", $LinksData, $sTemplate);
	$sTemplate = str_replace("{LEFT_SIDE}", $left, $sTemplate);
	$sTemplate = str_replace("{RIGHT_SIDE}", $right, $sTemplate);
	$sTemplate = str_replace("{THIS_PAGE}", $Page, $sTemplate);
	$sTemplate = str_replace("{NEXT_PAGE}", ($Pic +1), $sTemplate);
	$sTemplate = str_replace("{PREVIOUS_PAGE}", ($Pic -1), $sTemplate);
	$sTemplate = str_replace("{IMAGE_PATH}", "slides/".$files[$Pic], $sTemplate);
	$sTemplate = str_replace("{FULL_IMAGE}", $Pic, $sTemplate);
	$sTemplate = str_replace("{IMAGE_ALT}", $ImageDetails["AltText"], $sTemplate);
	$sTemplate = str_replace("{IMAGE_HEIGHT}", $SlideHeight, $sTemplate);
	$sTemplate = str_replace("{IMAGE_WIDTH}", $SlideWidth, $sTemplate);
	$sTemplate = str_replace("{DESCRIPTION}", $ImageDetails["Description"], $sTemplate);
	$sTemplate = str_replace("{COMMENTS}", $CommentsData, $sTemplate);
	$sTemplate = str_replace("{THUMBS}", $SlideData , $sTemplate);
	$sTemplate = str_replace("{RATE_IMAGE}", $RateData, $sTemplate);
	$sTemplate = str_replace("{INFO}", "Adde".$ImageDetails["MonthDay"]." ".$ImageDetails["Month"]." ".$ImageDetails["Year"]." Views: ".$ImageDetails["Hits"]." Downloads: ".$ImageDetails["DownloadCount"], $sTemplate);
return; $sTemplate;
}

function GetImageDetails($File) {
	Global $ImageDetails;
	ConnectDataBase();
	$result = mysql_query("SELECT * FROM ".'Images WHERE FileName = "'.$File.'"');
	if (!mysql_num_rows($result)) {
		mysql_query("INSERT INTO Images VALUES ('".$File."','". $File ."','". 1 ."','". 0 ."','". 0 ."','".date("Y")."','".date("m")."','".date("d")."','','','','0','','');");
	}else {
		$result = mysql_query("SELECT * FROM ".'Images WHERE FileName = "'.$File.'"');
		$ImageDetails["Title"] = mysql_result($result, 0, "Title");
		$ImageDetails["Hits"] = mysql_result($result, 0, "Hits");
		$ImageDetails["RatingSum"] = mysql_result($result, 0, "RatingSum");
		$ImageDetails["RatingCount"] = mysql_result($result, 0, "RatingCount");
		$ImageDetails["Year"] = mysql_result($result, 0, "Year");
		$ImageDetails["Month"] = mysql_result($result, 0, "Month");
		$ImageDetails["MonthDay"] = mysql_result($result, 0, "MonthDay");
		$ImageDetails["MetaKeyWords"] = mysql_result($result, 0, "MetaKeyWords");
		$ImageDetails["MetaDescription"] = mysql_result($result, 0, "MetaDescription");
		$ImageDetails["MetaTitle"] = mysql_result($result, 0, "MetaTitle");
		$ImageDetails["Description"] = mysql_result($result, 0, "Description");
		$ImageDetails["DownloadCount"] = mysql_result($result, 0, "DownloadCount");
		$ImageDetails["AltText"] = mysql_result($result, 0, "AltText");
		$ImageDetails["Raters"] = mysql_result($result, 0, "Raters");
		mysql_query("UPDATE Images SET Hits = '".($ImageDetails["Hits"] +1)."' WHERE FileName = '".$File."'");
	}
	return $ImageDetails;
}

function StingReplaceVar($string){
	global $CRITICAL_VAR;
	$pattern = '/\{\%([\$\w\[\]\"\"\/\.]+)\%\}/s';

	preg_match_all($pattern, $string, $matches);

	foreach ($matches[0] as $key => $match) {
		$SquareBracket = strpos($matches[1][$key],"[");

		if ($SquareBracket) {
			$VarName = StringLeft($matches[1][$key],$SquareBracket);
		}
		else{$VarName = $matches[1][$key];}
		
		$data = "";
		$SecurityRisk = false;
		
		foreach($CRITICAL_VAR as $value){
			dbg($value,$VarName,"\n");	
			if($value == $VarName) {$SecurityRisk = true;}
		}		
		
		if(!$SecurityRisk) {
			$cmd = 'global '. $VarName .'; $data = '.$matches[1][$key].';';
			$cmd = 'global '. $VarName .'; $data = '.$matches[1][$key].';';
			eval ($cmd);
		}
		
		$string = str_replace("{%".$matches[1][$key]."%}",$data,$string);
	}

	return $string;
}

//Lists files in directory
// directory - directory to list
// filter - filter to use (string that file name must contain (ex: .jpg)
function getDirectoryList($directory, $filter, $bDirOnly = false) {
	$results = array();
	$handler = opendir($directory);
	if(is_resource($handler)) {
	if ($bDirOnly == false){
		while ($file = readdir($handler)) {
			$ext = end(explode('.', $file));
			if ($file != "." && $file != ".." && stristr( $ext , $filter)) {
				$results[] = $file;
			}
		}
	}else {
		while ($file = readdir($handler)) {
			if ($file != "." && $file != "..") {
				if	(is_dir($directory."/".$file)){
					$results[] = $file;
				}
			}
		}
	}
	closedir($handler);
	}
	return $results;
}

function GetStyleList() {
	if ( StringRight(getcwd(),3) == "lib"){
		return getDirectoryList("../theme","",true);
	}else{
		return getDirectoryList("./theme","",true);
	}
}

function CreateThumbsPage(){
	PreChecks();
	global $General,$Page,$LinksData;
	if (strlen($Page) < 1) {$Page = 0;}
	if ($Pic >= 0) {$Page = (int)PicToPage();}
	$HTML = FileRead("thumbs.html");
	CreateNavigationBar();
	dbg("thumb");
	//dbg($GENERAL[this]);
}

function CreateSlidePage(){
	PreChecks();
	global $MiniW,$MiniH,$LinksData;
	$HTML = FileRead("Large.html");
	CreateNavigationBar();
	dbg("slide");
	include_once "post.php";
	
}

//MAIN function
function ParseAddressBar(){
	global $pic,$Download,$files;
	if(strlen($Pic) >= 1) {
		CreateSlidePage();
	}else{
		CreateThumbsPage();
	}
	
	if (strlen($Download) >= 1) {Download($files[$Download]);}
	
	if (strlen($SearchKeyword) > 0) {
		$SearchResult = array_search( $SearchKeyword , $files );
		if ($SearchResult == false) {echo"File not found";}else {header("location:./index.php?pic=".$SearchResult);}
	}
	
	mysql_close();
	exit();
}

function GetGeneratlInfo(){
	global $hits;
	ConnectDataBase();
	$result=mysql_query("SELECT * FROM general");

	$hits=mysql_result($result, 0, "views")+1;
	$LastUpdate=mysql_result($result, 0, "lastupdate")+1;
	
	//$query="UPDATE general SET views='".$hits."',lastupdate='".$current."'";
	//	mysql_query($query);

	$query="SELECT * FROM general";
	$result=mysql_query($query);

	$hits=mysql_result($result, 0, "views");
	$updatetime=mysql_result($result, 0, "lastupdate");
}

function PicToPage() {
	global $cols, $rows, $Pic;
	if ($Pic == 0) {
		return 0;
	}else {
		return $Pic/($cols*$rows);
	}
}

//Sets value for $LinksData
function CreateNavigationBar(){
	global $LinksData,$files,$cols,$rows;
	$iFileCount = count($files);
	for ($i = 0 ; $i < $iFileCount/($cols*$rows); $i++) {
		if ($i == $Page) {$LinksData .= '<a href="?page='.$i .'">'.'<span style="background-color: #8DBAE1;">'.($i+1).'</span>'."</a>|";
		}else {$LinksData .= '<a href="?page='.$i.'">'.($i+1)."</a>|";}
	}
}

function SlideView($iPage) {
	global $cols, $rows, $files, $iFileCount;
	$iStart = $iPage*$cols*$rows;
	return "<!-- Main table Start-->\n".table($cols, $rows, $files, $iStart)."		<!-- Main table End-->\n";
}


function table($iWidth, $iHeight, $aFiles, $iStart) {
	global $PicWidth, $PicHeight, $ImagesBkColor, $ColWidth, $RowHeight ;
	$iFileCount = count($aFiles);
	$stable = '			<table align="center" cellpadding="0" cellspacing="6" border="0" bgcolor='.$ImagesBkColor .">\n				</tbody>";
	$iCounter = $iStart;
	for ($i = 1; $i <= $iHeight; $i++) {
		$stable .= '				<tr>'."\n";
		for ($n = 1; $n <= $iWidth; $n++) {
			if ($iCounter < $iFileCount) {
				$sText = "\n".' 					<table align="center" border="0" cellpadding="0" cellspacing="0" width="266">'."\n".'					<tbody><tr><td style="width: 266px; height: 206px; margin-left: auto; margin-right: auto; text-align: center;" class="thumb">'."\n".'					<a href=?pic='.$iCounter.'><img src="thumbs/'.$aFiles[$iCounter].'" alt="'.$aFiles[$iCounter].'" title="'.$aFiles[$iCounter].'" height="'.$PicHeight.'" width="'.$PicWidth .'"/>'."\n".'					</td></tr></tbody></table>'."\n";
			}else {$sText = "";}
			$stable .= '				<th style="width: '.$ColWidth.'; height: '.$RowHeight.';"  class="container1";>'.$sText.'				</th>'."\n";
			$iCounter +=1;
		}
		$stable .= '				</tr>'."\n";
	}
	$stable .= '			</tbody></table>'."\n";
	return  $stable;
}

function PreChecks(){
	global $TABLE_GENERAL,$TABLE_USERS,$TABLE_RATINGS,$TABLE_GROUPS;
	$tableerror = false;
	if (mysql_query("SELECT * FROM ".$TABLE_GENERAL) == false){ErrorPushTitle("Database error");ErrorPushBody("Table not ".$TABLE_GENERAL." found");$tableerror = true;}
	if (mysql_query("SELECT * FROM ".$TABLE_USERS) == false){ErrorPushTitle("Database error");ErrorPushBody("Table not ".$TABLE_USERS." found");$tableerror = true;}
	if (mysql_query("SELECT * FROM ".$TABLE_RATINGS) == false){ErrorPushTitle("Database error");ErrorPushBody("Table not ".$TABLE_RATINGS." found");$tableerror = true;}
	if (mysql_query("SELECT * FROM ".$TABLE_GROUPS) == false){ErrorPushTitle("Database error");ErrorPushBody("Table not ".$TABLE_GROUPS." found");$tableerror = true;}
	if ($tableerror){ErrorPushBody("<br>You can <a href='/install/install.html'>install</a> gallery software of set it up manually");ErrorCall();dbg("tst");}
	if (count($files) == 0) {DisplayError("Images not found","This gallery does not have any images <br> Please add your original size images to /Images/Original");}
}

function DisplayError($sTitle, $sText){
	global $LoginData;
	$html = FileRead($_SERVER['DOCUMENT_ROOT']."/error.html");
	$html = str_replace("{LOGIN}", $LoginData, $html);
	$html = str_replace("{ERROR_TITLE}", $sTitle, $html);
	$html = str_replace("{ERROR_TEXT}", $sText, $html);
	die($html);
}

function IntToChecked($iVal){
	$iVal = intval($iVal, 10);
	if($iVal == 1) {return 'checked="checked"';}
	else {return "";}
}

function BoolToChecked($bVal){
	if($bVal) {return 'checked="checked"';}
	else {return "";}
}

//Template handler
function TemplateReplace($sString,$UserReplace = "",$iGroup = 0) {
	global $OPT_NO_ACP;
	$data = StingReplaceFile($sString);
	$data = StingReplaceVar($sString);
	if($UserReplace != "") {$data = ReplaceUserInfo($data,$UserReplace );}
	if (!$OPT_NO_ACP){$data = ReplaceGeneralInfo($data);}
	if (!$OPT_NO_ACP){$data = ReplaceGroupsInfo($data,$iGroup);}
	return $data;
}

function ReplaceGroupsInfo($sStr,$iGroup = 0){
	global $GROUPS,$TabID,$Action,$Group,$RIGHTS;
	ConnectDataBase();
	$result = mysql_query('SELECT * FROM '.$GROUPS[this]);
	//dbg($result);
	$GrupList = "";
	$bSuccess = true;
	while($bSuccess) {
		$GroupID = @mysql_result($result, $iCount , $GROUPS["ID"]["Name"]);
		$GroupName = @mysql_result($result, $iCount , $GROUPS["Name"]["Name"]);
		$GroupColor = @mysql_result($result, $iCount , $GROUPS["Color"]["Name"]);
		
		if($GroupColor != "" && $GroupColor != "none") {
			$GroupColor = 'style="{color: '.$GroupColor .'; }"';
		}
		if($GroupColor == "none") {$GroupColor = "";}
		
		if ($GroupID != false){
			$GrupList .= '<a href="acp.php?id='.$TabID."&a=".$Action."&g=".$GroupID .'" '.$GroupColor.'>'.$GroupName.'</a> ';
		}else{
			$bSuccess = false;
		}
		
		$iCount += 1;		
	}
	$sStr = str_ireplace("{GROUP_LIST}",$GrupList ,$sStr);
	if ($Group != ""){
		$result = mysql_query('SELECT * FROM '.$GROUPS[this].' WHERE '.$GROUPS["ID"]["Name"]." = ".$Group);
		$GroupRank = @mysql_result($result, 0 , $GROUPS["Rank"]["Name"]);
		$GroupName = @mysql_result($result, 0, $GROUPS["Name"]["Name"]);
		$GroupColor = @mysql_result($result, 0, $GROUPS["Color"]["Name"]);
		$GroupPermissions = @mysql_result($result, 0 , $GROUPS["Permissions"]["Name"]);
		$sStr = str_ireplace("{".$GROUPS["Color"]["Name"]."}", $GroupColor ,$sStr);
		$sStr = str_ireplace("{".$GROUPS["Rank"]["Name"]."}", $GroupRank ,$sStr);
		$sStr = str_ireplace("{".$GROUPS["Name"]["Name"]."}", $GroupName ,$sStr);
		$sStr = str_ireplace("{CAN_RATE}", BoolToChecked(IsGroupMember($GroupPermissions,$RIGHTS["Raters"]["Name"])) ,$sStr);
		$sStr = str_ireplace("{CAN_COMMENT}", BoolToChecked(IsGroupMember($GroupPermissions,$RIGHTS["Commentators"]["Name"])) ,$sStr);
		$sStr = str_ireplace("{CAN_UPLOAD}", BoolToChecked(IsGroupMember($GroupPermissions,$RIGHTS["Image"]["Name"])) ,$sStr);
		$sStr = str_ireplace("{CAN_CONTRIBUTE}", BoolToChecked(IsGroupMember($GroupPermissions,$RIGHTS["Site"]["Name"])) ,$sStr);
		$sStr = str_ireplace("{CAN_MODERATE}", BoolToChecked(IsGroupMember($GroupPermissions,$RIGHTS["Moderator"]["Name"])) ,$sStr);
		$sStr = str_ireplace("{CAN_ADMINISTRATE}", BoolToChecked(IsGroupMember($GroupPermissions,$RIGHTS["Administrator"]["Name"])) ,$sStr);
	}else{
		$sStr = str_ireplace("{".$GROUPS["Color"]["Name"]."}","",$sStr);
		$sStr = str_ireplace("{".$GROUPS["Rank"]["Name"]."}","",$sStr);
		$sStr = str_ireplace("{".$GROUPS["Name"]["Name"]."}","",$sStr);
		$sStr = str_ireplace("{CAN_RATE}", "" ,$sStr);
		$sStr = str_ireplace("{CAN_COMMENT}", "" ,$sStr);
		$sStr = str_ireplace("{CAN_UPLOAD}", "" ,$sStr);
		$sStr = str_ireplace("{CAN_CONTRIBUTE}", "" ,$sStr);
		$sStr = str_ireplace("{CAN_MODERATE}", "" ,$sStr);
		$sStr = str_ireplace("{CAN_ADMINISTRATE}", "" ,$sStr);
	}
	return $sStr;
}

function ReplaceUserInfo($sStr,$sUser = "") {
	if($sUser == "") {return $sStr;}
	global $Users,$GROUPS;
	ConnectDataBase();
	$result = mysql_query('SELECT * FROM '.$USERS[this].' WHERE '.$USERS["UserName"]["Name"].' = "'.$sUser.'"');
	$keys = array_keys($Users);
	for($i = 1;$i < count($keys);$i++) {//0th is this
		if ($USERS[$keys[$i]]["Name"] == $USERS["UserShowMSN"]["Name"] || $USERS[$keys[$i]]["Name"] == $USERS["UserShowMail"]["Name"] || $USERS[$keys[$i]]["Name"] == $USERS["UserIsBanned"]["Name"] || $USERS[$keys[$i]]["Name"] == $USERS["UserFounder"]["Name"]){
			$sStr = str_ireplace("{".$USERS[$keys[$i]]["Name"]."}", IntToChecked(mysql_result($result, 0, $USERS[$keys[$i]]["Name"] )), $sStr);
		}else {
			if($USERS[$keys[$i]]["Name"] != $USERS["UserDefaultGroup"]["Name"] && $USERS[$keys[$i]]["Name"] != $USERS["UserGroup"]["Name"]) {
				$sStr = str_ireplace("{".$USERS[$keys[$i]]["Name"]."}", mysql_result($result, 0, $USERS[$keys[$i]]["Name"]), $sStr);
			}
		}
		if($USERS[$keys[$i]]["Name"] == $USERS["UserGroup"]["Name"] ) {$UserGroup = mysql_result($result, 0, $USERS[$keys[$i]["Name"]]);}
	}
	$bSuccess = true;
	$iCount = 0;
	$Data = "";
	$result = mysql_query('SELECT * FROM '.$GROUPS[this]);
	$DefaultGroupData = "\n".'<select name="DefaultGroup">'."\n";

	while($bSuccess) {
		$Group = @mysql_result($result, $iCount , $GROUPS["ID"]["Name"]);
		if ($Group != false){
			if($Group == $UserGroup) {
				$DefaultGroupData .= '<option selected="selected" value="'.$Group.'">'.mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).'</option>'."\n";
			}else{
				$DefaultGroupData .= '<option value="'.$Group.'">'.mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).'</option>'."\n";
			}
			if (IsGroupMember($UserGroup,$Group )){$Data .= '<tr><td style="vertical-align: top; width: 200px;">'.mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).'<br></td><td style="vertical-align: top; width: 966px;"> <input name="AllowSmiles" checked="checked" type="checkbox"><br></td></tr>';}
			else {$Data .= '<tr><td style="vertical-align: top; width: 200px;">'.mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).'<br></td><td style="vertical-align: top; width: 966px;"> <input name="AllowSmiles" type="checkbox"><br></td></tr>';}
		}else {
			$bSuccess = false;
		}
		$iCount += 1;
	}
	
	$DefaultGroupData .= "</select>\n";
	$sStr = str_ireplace("{".$USERS["UserDefaultGroup"]["Name"]."}", $DefaultGroupData, $sStr);
	$sStr = str_ireplace("{".$USERS["UserGroup"]["Name"]."}", $Data, $sStr);
	return $sStr;
}

function ReplaceGeneralInfo($sStr) {
	global $General,$GROUPS;;
	ConnectDataBase();
	$result = mysql_query('SELECT * FROM '.$GENERAL[this]);
	$sStr = str_ireplace("{".$GENERAL["SiteName"]["Name"] ."}",@mysql_result($result, 0, $GENERAL["SiteName"]["Name"]),$sStr);
	//dbg("",$hresult,$GENERAL["SiteName"]["Name"],'SELECT * FROM '.$GENERAL[this],mysql_error(),mysql_result($hresult, 0, $GENERAL["SiteName"]["Name"]));
	$sStr = str_ireplace("{".$GENERAL["SiteMOD"]["Name"] ."}",@mysql_result($result, 0, $GENERAL["SiteMOD"]["Name"]),$sStr);
	$sStr = str_ireplace("{".$GENERAL["SiteDescription"]["Name"] ."}",@mysql_result($result, 0, $GENERAL["SiteDescription"]["Name"]),$sStr);
	$sStr = str_ireplace("{".$GENERAL["TimeFormat"]["Name"] ."}",@mysql_result($result, 0, $GENERAL["TimeFormat"]["Name"]),$sStr);
	$sStr = str_ireplace("{".$GENERAL["AllowBBCode"]["Name"] ."}",IntToChecked(@mysql_result($result, 0, $GENERAL["AllowBBCode"]["Name"])),$sStr);
	$sStr = str_ireplace("{".$GENERAL["AllowSmiles"]["Name"] ."}",IntToChecked(@mysql_result($result, 0, $GENERAL["AllowSmiles"]["Name"])),$sStr);
	$sStr = str_ireplace("{".$GENERAL["SignatureMaxLen"]["Name"] ."}",@mysql_result($result, 0, $GENERAL["SignatureMaxLen"]["Name"]),$sStr);
	$DefaultGroup = @mysql_result($result, 0, $GENERAL["DefaultGroup"]["Name"]);
	$DefaultGroupList = @mysql_result($result, 0, $GENERAL["DefaultGroupList"]["Name"]);
	$DefaultStyle = @mysql_result($result, 0, $GENERAL["DefaultStyle"]["Name"]);
	$bSuccess = true;
	$iCount = 0;
	$Data = "";
	$result = mysql_query('SELECT * FROM '.$GROUPS[this]);
	$DefaultGroupData = "\n".'<select name="DefaultGroup">'."\n";
	while($bSuccess) {
		$Group = @mysql_result($result, $iCount , $GROUPS["ID"]["Name"]);
		if ($Group != false){
			if($Group == $DefaultGroup) {
				$DefaultGroupData .= '<option selected="selected" value="'.$Group.'">'.@mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).'</option>'."\n";
			}else{
				$DefaultGroupData .= '<option value="'.$Group.'">'.@mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).'</option>'."\n";
			}
			if (IsGroupMember($DefaultGroupList,$Group )){$Data .= '<tr><td class="LeftPanel">'.@mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).'<br></td><td class="RightPanel"> <input name='.@mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).' checked="checked" type="checkbox"><br></td></tr>'."\n";}
			else {$Data .= '<tr><td class="LeftPanel">'.@mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).'<br></td><td class="RightPanel"> <input name="'.@mysql_result($result, $iCount , $GROUPS["Name"]["Name"]).'" type="checkbox"><br></td></tr>'."\n";}
		}else{
			$bSuccess = false;
		}
		
		$iCount += 1;		
	}
	$SomeUndefinedVariable = "lol";

	$DefaultGroupData .= "</select>\n";
	
	$StyleList = GetStyleList();
	$StyleData = "\n".'<select name="DefaultStyle">'."\n";
	for($i = 0; $i < count($StyleList);$i++) {
		if($DefaultStyle == $StyleList[$i]) {
			$StyleData .= '<option selected="selected" value="'.$StyleList[$i].'">'.$StyleList[$i].'</option>'."\n";
		}else {
			$StyleData .= '<option value="'.$StyleList[$i].'">'.$StyleList[$i].'</option>'."\n";
		}
	}
	$StyleData .= "</select>\n";
	$sStr = str_ireplace("{".$GENERAL["DefaultStyle"]["Name"]."}",$StyleData,$sStr);
	$sStr = str_ireplace("{".$GENERAL["DefaultGroup"]["Name"]."}",$DefaultGroupData,$sStr);
	$sStr = str_ireplace("{".$GENERAL["DefaultGroupList"]["Name"]."}",$Data,$sStr);
	return $sStr;
}

function StingReplaceFile($string){
	$pattern = '/\{\{([\w+\/\.]+)\}\}/s';
	
	preg_match_all($pattern, $string, $matches);

	foreach ($matches[0] as $key => $match) {
		$data = StingReplaceFile(file_get_contents($matches[1][$key]));
		$string = str_replace("{{".$matches[1][$key]."}}",$data,$string);
	}
	
	return $string;
}


function IsGroupMember($iUserGroup, $iGroup){
	$iUserGroup = intval ($iUserGroup);$iGroup = intval ($iGroup);
	if($iUserGroup & $iGroup) {return true;}
	else {return false;}
}

function GetUserRights($sUser) {
	global $Users,$GROUPS;
	ConnectDataBase();
	$result = mysql_query('SELECT * FROM '.$USERS[this].' WHERE '.$USERS["UserName"]["Name"].' = "'.$sUser.'"');
	$GroupData = mysql_result($result, 0, $USERS["UserGroup"]["Name"]);
	$result = mysql_query('SELECT * FROM '.$GROUPS[this]);
	$bSuccess = true;
	$iRights = 0;
	$iCount = 0;
	while($bSuccess) {
		$Group = @mysql_result($result, $iCount , $GROUPS["ID"]["Name"]);
		$GropPermissions = @mysql_result($result, $iCount , $GROUPS["Permissions"]["Name"]);
		
		if ($Group != false && $GropPermissions != false){
			if (IsGroupMember($GroupData,$Group )){$iRights += $GropPermissions;}
		}else{
			$bSuccess = false;
		}
		$iCount += 1;		
	}
	return $iRights;
}

function ToBool($Boolean) {
	$Boolean = intval($Boolean);
	if($Boolean == 1) {return true;}else {return false;}
}

//http://www.autoitscript.com/autoit3/docs/functions.htm
function StringLeft($sString,$iCount)
{
	return substr ( $sString ,0, $iCount );
}

function StringRight($sString,$iCount)
{
	return substr ( $sString , strlen($sString) - $iCount, strlen($sString));
}

function StringTrimLeft($sString,$iCount)
{
	return substr ( $sString ,$iCount, strlen($sString) );
}

function StringTrimRight($sString,$iCount)
{
	return substr ( $sString ,0 , strlen($sString) - $iCount);
}

?>